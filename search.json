[{"title":"函数式编程学习之路：Mit-Scheme 在 Ubuntu16.04 下的环境配置","url":"/2019/03/16/函数式编程学习之路:Mit-Scheme在Ubuntu16.04下的环境配置/","content":"## 前言\n最近，为了学习函数式编程，我开始看 MIT 的视频公开课 - **《计算机程序的构造和解释》**（使用的教程是著名的**SICP**）。为了与课程同步，我需要学习 **scheme** 这门函数式编程语言，这是我学习的第一门以函数式编程为主的语言。首先我要开始学习如何配置这门语言的环境，为了加深记忆以及方便以后的复用而尽量避免再次花时间在搜索引擎上，我把我了解、学习到的内容总结到这篇文章里。\n\n## 安装\n得益于 Ubuntu 上早有编译好的包，可以直接使用 `sudo apt-get install mit-scheme` 一步到位。这种方法最简单但安装好的解释器可能不是最新版的，也可能不是想要的版本，对于版本有要求的话，需要访问 MIT-Scheme 的主页下载适用的版本，然后编译安装。\n\n## 在 MIT-Scheme 解释器内解释或编译运行程序\n在终端输入 `mit-scheme` 或 `scheme` 会进入解释器环境内，这时可以输入 Scheme 语句然后执行，我的解释器环境如下图所示：\n\n![](https://miao.su/images/2019/03/16/2019-03-1609-40-14mit-scheme96b32.png)\n\n输入语句然后执行：\n\n![](https://miao.su/images/2019/03/16/2019-03-1609-59-48mit-scheme02b10c4.png)\n\n如果有一个文件名为 add.scm 、 内容为 `(* 3 4 5)` 的Scheme程序，如何执行？\n\n1. 在 mit-scheme 解释器里输入命令 `(cf \"add\")` 可以编译源码:\n\n    ![](https://miao.su/images/2019/03/16/2019-03-1610-10-54mit-scheme0359bc5.png)\n2. 再输入命令 `(load \"add\")` 会运行编译好的程序:\n\n    ![](https://miao.su/images/2019/03/16/2019-03-1610-13-00mit-schmem0489817.png)\n\n## 使用 MIT-Scheme 直接解释执行程序\n上述方法有一点麻烦，其实有更简单的方式在终端上执行Scheme程序，我们可以利用 shell 的重定向能力，在终端输入 `scheme < add.scm`，出现如下提示：\n\n![](https://miao.su/images/2019/03/16/2019-03-1610-21-00mit-scheme0552454.png)\n\n## 在 Visual Studio Code 上编写和运行Scheme源码\n\n1. 首先需要安装 **vscode-scheme** 和 **Code Runner** 这两个插件。第一个插件提供了代码高亮和补全等功能，让我们在编写 Scheme 时更舒服，第二个插件让我们能一键运行 Scheme 程序。\n2. 配置 Code Runner。在 vscode 的配置里搜索 `executorMapByFileExtension`，点击 **在settings.json中编辑** 打开 settings.json,如果发现没有名为 `code-runner.executorMapByFileExtension` 的字段的话，那就添加它，vscode会自动生成默认的配置，然后在该字段下添加一行：`\".scm\": \"scheme <\"`，保存后如下所示：\n\n    ![](https://miao.su/images/2019/03/16/2019-03-1610-46-24mit-scheme069fc73.png)\n3. 代码写完保存后直接按 Code Runner 的快捷键 Ctrl+Alt+N 即可运行","tags":["函数式编程","环境配置"]}]